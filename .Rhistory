meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
meat_consumption
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ".")
head(meat_consumption)
str(meat_consumption)
meat_consumption
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = "\")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ";")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ";")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ";")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ";")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumptions.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv", sep = ",")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumption.csv")
meat_consumption <- read.csv("data_input/meat_consumptions.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumptions.csv", sep = ',', nrows = 1)
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read_csv("data_input/meat_consumptions.csv", sep = ',', )
meat_consumption <- read_csv("data_input/meat_consumptions.csv", sep = ',')
meat_consumption <- read_csv("data_input/meat_consumptions.csv", sep = ',')
meat_consumption <- read_csv("data_input/meat_consumptions.csv")
meat_consumption <- read.csv("data_input/meat_consumptions.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumptions.csv", colClasses = "character")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
meat_consumption$Value <- as.numeric(meat_consumption$Value)
meat_consumption
meat_consumption <- read.csv("data_input/meat_consumptions.csv", colClasses = "character")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read.csv("data_input/meat_consumptions.csv")
head(meat_consumption)
str(meat_consumption)
install.packages("readxl")
library(radxl)
library(readxl)
meat_consumption <- read.table("data_input/xlsx")
meat_consumption <- read.table("data_input/meat_consumptions.xlsx")
meat_consumption <- read.table("data_input/meat_consumptions.xlsx", sep = ',')
meat_consumption <- read_excel("data_input/meat_consumptions.xlsx")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read_excel("data_input/meat_consumptions.xlsx")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read_excel("data_input/meat_consumptions.xlsx")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read_excel("data_input/meat_consumptions.xlsx")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- read_excel("data_input/meat_consumptions.xlsx")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
sort(meat_consumption$Value)
#head(meat_consumption)
anyNA(meat_consumption)
summary(meat_consumption)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
meat_consumption
meat_consumption <- read.csv("data_input/meat_consumptions.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
sort(meat_consumption$Value)
#head(meat_consumption)
anyNA(meat_consumption)
summary(meat_consumption)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
meat_consumption
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
barplot(meat_by_country$Value, names.arg = meat_by_country$LOCATION, ylab = "Kg/Capita", xlab = "Meat Consumption")
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
meat_consumption <- read.csv("data_input/meat_consumptions.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
sort(meat_consumption$Value)
#head(meat_consumption)
anyNA(meat_consumption)
summary(meat_consumption)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
meat_by_year <- aggregate(formula = Value~TIME, data = meat_consumption)
meat_by_year <- aggregate(formula = Value~TIME, data = meat_consumption, FUN = sum)
meat_by_year
table(meat_consumption$SUBJECT)
table(meat_consumption$SUBJECT + YEAR)
table(meat_consumption$SUBJECT + TIME)
table(meat_consumption$SUBJECT + TIME)
table(meat_consumption$SUBJECT)
meat_by_year <- aggregate(formula = Value~TIME + SUBJECT, data = meat_consumption, FUN = sum)
meat_by_year
table(meat_consumption$SUBJECT, meat_consumption$TIME)
barplot(meat_by_country$Value, names.arg = meat_by_country$LOCATION, ylab = "Kg/Capita", xlab = "Meat Consumption")
meat_consumption <- read.csv("data_input/meat_consumption2018.csv")
meat_consumption <- read.csv("data_input/meat_consumption2018.csv")
head(meat_consumption)
str(meat_consumption)
knitr::opts_chunk$set(echo = TRUE)
install.packages("readxl")
library(readxl)
meat_consumption <- read.csv("data_input/meat_consumption2018.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
sort(meat_consumption$Value)
#head(meat_consumption)
anyNA(meat_consumption)
summary(meat_consumption)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
table(meat_consumption$SUBJECT, meat_consumption$TIME)
meat_by_year <- aggregate(formula = Value~TIME + SUBJECT, data = meat_consumption, FUN = sum)
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
barplot(meat_by_country$Value, names.arg = meat_by_country$LOCATION, ylab = "Kg/Capita", xlab = "Meat Consumption")
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
install.packages("readxl")
library(readxl)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
table(meat_consumption$SUBJECT, meat_consumption$value)
table(meat_consumption$SUBJECT, meat_consumption$Value)
table(meat_consumption$SUBJECT)
table(meat_consumption$SUBJECT + Value)
knitr::opts_chunk$set(echo = TRUE)
install.packages("readxl")
library(readxl)
meat_consumption <- read.csv("data_input/meat_consumption2018.csv")
head(meat_consumption)
str(meat_consumption)
meat_consumption <- meat_consumption[, c(1, 2, 3, 6, 7)]
head(meat_consumption)
meat_consumption$Value <- round(meat_consumption$Value, digits = 2)
sort(meat_consumption$Value)
#head(meat_consumption)
anyNA(meat_consumption)
summary(meat_consumption)
aggregate(Value ~ SUBJECT, meat_consumption, mean)
meat_by_year <- aggregate(formula = Value~TIME + SUBJECT, data = meat_consumption, FUN = sum)
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
barplot(meat_by_country$Value, names.arg = meat_by_country$LOCATION, ylab = "Kg/Capita", xlab = "Meat Consumption")
install.packages("readxl")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl")
library(readxl)
aggregate(Value ~ SUBJECT, meat_consumption, sum)
aggregate(Value ~ SUBJECT, meat_consumption, sum)
meat_by_country <- aggregate(formula = Value ~ LOCATION, data = meat_consumption, FUN = sum)
sort(meat_by_country$Value, decreasing = T)
counts <- table(meat_consumption$LOCATION, meat_consumption$SUBJECT)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(meat_consumption$SUBJECT, meat_consumption$LOCATION)
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts))
counts <- table(meat_consumption$SUBJECT, meat_consumption$LOCATION)
barplot(counts)
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# change scientific number
options(scipen = 99)
library(gmodels)
library(gtools)
library(dplyr)
knitr::include_graphics("img/Classification 1.png")
knitr::include_graphics("img/linreg-vs-logreg.png")
# peluang lulus
30/40
# peluang tidak lulus
10/40
1-(30/40)
70/100
# peluang lulus
30/40
# odds lulus
(30/40)/(1-(30/40))
# peluang
p <- 25/40
# odds
p/(1-p)
# min
0/(1-0)
# max
1/(1-1)
log((30/40)/(1-(30/40)))
# min
log((0/(1-0)))
# max
log((1/(1-1)))
# log of odds -> odds
exp(1.098612)
# odds -> peluang dengan `odds/(odds+1)`
3/(3+1)
library(gtools)
# log of odds -> peluang dengan `inv.logit()`
inv.logit(1.098612)
# peluang -> log of odds dengan `logit()`
logit(0.75)
# Plot sigmoid curve
curve(inv.logit(x), from = -10, to=10, xlab = "Log of Odds", ylab="Probability")
80/100
20/100
1-(80/100)
0.8/0.2
log((80/100)/(1-(80/100)))
logit(0.8)
# read data
honors <- read.csv("data_input/sample.csv")
head(honors)
# struktur data
glimpse(honors)
# wrangling data
honors <- honors %>%
mutate(female = as.factor(female),
hon = as.factor(hon)) %>%
select(-femalexmath)
# cek missing value
colSums(is.na(honors))
# model tanpa prediktor
model_honors <- glm(formula = hon~1, data = honors, family = "binomial")
summary(model_honors)
# probability
table(honors$hon)
p <- 49/(151+49)
# odds
o <- p/(1-p)
# log of odds
log(o)
logit(p)
# log of odds
exp(-1.12546)
inv.logit(-1.12546)
# model dengan 1 pred kategorik
model_honors2 <- glm(formula = hon~female, data = honors, family = "binomial")
summary(model_honors2)
# freq female male
table(honors$female)
# proportion of female/male got honors
table("female" = honors$female, "honors" = honors$hon)
# peluang female dapat honors
phonf <- 32/(77+32)
# peluang male dapat honors
phonm <- 17/(74+17)
# odds female honor
phonf/(1-phonf)
# odds male honor
phonm/(1-phonm)
# odds ration female terhadap male mendapat honors
(phonf/(1-phonf))/(phonm/(1-phonm))
# log of odds
log((phonf/(1-phonf))/(phonm/(1-phonm)))
exp(0.5928)
exp(-1.4709)
# log of odds
hon = -1.4709 + (0.5928 * 1)
# probability
inv.logit(hon)
# log of odds
hon = -1.4709 + (0.5928 * 0)
# probability
inv.logit(hon)
prob <- c(0.2935717, 0.1868059)
ifelse(prob > 0.5, "honors", "not honor")
# model dengan 1 pred numerik
model_honor3 <- glm(hon~math, honors, family = "binomial")
summary(model_honor3)
# log of odds
math52 <- -9.79394 + 0.15634*52
math53 <- -9.79394 + 0.15634*53
math53-math52
exp(-9.79394)
inv.logit(-9.79394)
exp(0.15634)
# log of odds -> odds
exp(0.15634)
((0.15634*53)-(0.15634*52))/(0.15634*52)
model_honor4 <- glm(formula = hon~female+math, data = honors, family = "binomial")
summary(model_honor4)
# female
exp(0.96531)
# math
exp(0.16422)
exp(-10.80595)
hon1 = -10.80595 + 0.96531*0 + 0.16422*89
hon1 <- inv.logit(hon1)
hon2 = -10.80595 + 0.96531*1 + 0.16422*89
hon2 <- inv.logit(hon2)
hon3 = -10.80595 + 0.96531*0 + 0.16422*54
hon3 <- inv.logit(hon3)
hon4 = -10.80595 + 0.96531*1 + 0.16422*55
hon4 <- inv.logit(hon4)
mahasiswa <- c(hon1, hon2, hon3, hon4)
ifelse(mahasiswa > 0.5, "honor", "not honor")
model_honor5 <- glm(hon~female+read, honors, family = "binomial")
summary(model_honor5)
exp(model_honor5$coefficients[2])
inv.logit(model_honor5$coefficients[2])
exp(model_honor5$coefficients[3])
hon5 = -8.58001 + 0.94474 * 0 + 0.12567*67
inv.logit(hon5)
hon6 = -8.58001 + 0.94474 * 1 + 0.12567*67
inv.logit(hon6)
summary(model_honor5)
summary(model_honor4)
model_honor6 <- glm(hon~., honors, family = "binomial")
summary(model_honor6)
table(honors$hon, honors$write)
model_honor6 <- glm(hon~math+female+read, honors, family = "binomial")
summary(model_honor6)
summary(model_honor4)$aic
summary(model_honor5)$aic
flight <- read.csv("data_input/flight_sm.csv") %>%
mutate(DepDel15 = as.factor(DepDel15))
glimpse(flight)
model_flight <- glm(formula = DepDel15~Month+DayofWeek, data = flight, family = "binomial")
exp(model_flight$coefficients[2])
exp(model_flight$coefficients[3])
library(car)
vif(model_flight)
# penyesuaian
flight <- flight %>%
mutate(Month = as.factor(Month),
DayofWeek = as.factor(DayofWeek))
# pembuatan model baru
model_new <- glm(DepDel15~Month+DayofWeek, flight, family = "binomial")
summary(model_new)
# konfirmasi
plot(table( flight$Month, flight$DepDel15))
plot(table( flight$DayofWeek, flight$DepDel15))
loan <- read.csv("data_input/loan2017Q4.csv", stringsAsFactors = T)
head(loan)
glimpse(loan)
loan <- loan %>%
mutate(not_paid = as.factor(not_paid),
verified = as.factor(verified),
grdCtoA = as.factor(grdCtoA)) %>%
select(-c(annual_inc, verification_status, grade))
colSums(is.na(loan))
summary(loan)
# prop table
prop.table(table(loan$not_paid))
RNGkind(sample.kind = "Rounding")
# splitting
set.seed(417)
idx <- sample(nrow(loan), nrow(loan)*0.8)
loan_train <- loan[idx,]
loan_test <- loan[-idx,]
# re-check class imbalance pada data train
prop.table(table(loan_train$not_paid))
colnames(loan_train)
model_loan <- glm(not_paid~home_ownership+purpose+installment+log_inc+dti+grdCtoA+verified,
data = loan_train, family = "binomial")
summary(model_loan)
# small business
exp(model_loan$coefficients["purposesmall_business"])
# installment
exp(model_loan$coefficients["installment"])
# logistic regression juga dapat menggunakan step
model_loan2 <- step(object = glm(not_paid~., loan_train, family = "binomial"),
direction = "backward")
predict(object = model_loan, newdata = loan_test[1:6,], type = "link")
predict(object = model_loan, newdata = loan_test[1:6,], type = "response")
loan_test$pred.Risk <- predict(object = model_loan, newdata = loan_test, type = "response")
# ifelse(kondisi, benar, salah)
loan_test$pred.Label <- ifelse(loan_test$pred.Risk > 0.5, "1", "0")
# ubah kelas target (aktual dan prediksi) menjadi factor
loan_test$pred.Label <- as.factor(loan_test$pred.Label)
# lihat hasil prediksi
loan_test %>%
select(not_paid, pred.Label) %>%
head()
knitr::include_graphics("img/tnfp.PNG")
# confusion matrix sederhana
table(predict = loan_test$not_paid, reference = loan_test$pred.Label)
library(caret)
confusionMatrix(data = as.factor(loan_test$pred.Label), reference = as.factor(loan_test$not_paid), positive = "1")
# confusion matrix sederhana
table(predict = loan_test$not_paid, reference = loan_test$pred.Label)
(96+93)/nrow(loan_test)
96/(96+68)
93/(93+55)
96/(96+55)
knitr::include_graphics("img/KNN.png")
knitr::include_graphics("img/histology-examples.png")
wbcd <- read.csv("data_input/wisc_bc_data.csv", stringsAsFactors = T)
# inspect data
glimpse(wbcd)
# membuang kolom id
wbcd <- wbcd %>%
select(-id)
# assigning label for target
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"), labels = c("Benign", "Malignant"))
# target class proportion
prop.table(table(wbcd$diagnosis))
# cek range nilai tiap variable
summary(wbcd)
set.seed(100)
idx <- sample(nrow(wbcd), nrow(wbcd)*0.7)
train <- wbcd[idx,]
test <- wbcd[-idx,]
# recheck class balance
prop.table(table(train$diagnosis))
# downsample
train_new <- downSample(x = train[, -1], y = train[, 1], yname = "diagnosis")
# recheck prop class target
prop.table(table(train_new$diagnosis))
normalize <- function(x){
return (
(x - min(x))/(max(x) - min(x))
)
}
# contoh:
# scale
scale(c(1,2,3,4,5))
# bila memakai normalize
# data prediktor
summary(train_new)
# membuat data prediktor
train_x <- scale(train_new[, -31]) # -31 adalah kolom variable target
test_x <- scale(test[, -1], center = attr(train_x, "scaled:center"), scale = attr(train_x, "scaled:scale"))
# data label (target)
train_y <- train_new$diagnosis
test_y <-  test$diagnosis
# find optimum k
k <- sqrt(nrow(train_x))
library(class) # package untuk fungsi `knn()`
model_knn <- knn(train = train_x, test = test_x, cl = train_y, k = 17)
# cek hasil prediksi
model_knn %>%
head()
# cek tipe data target, harus faktor
confusionMatrix(data = model_knn, reference = test_y, positive = "Malignant")
model_log <- glm(diagnosis~., train_new, family = "binomial")
test$predict.Risk <- predict(model_log, newdata = test, type = "response")
test$predict.Label <- ifelse(test$predic.Risk > 0.5, "Maligant", "Benign")
train_new
